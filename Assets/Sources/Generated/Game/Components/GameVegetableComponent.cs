//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public VegetableComponent vegetable { get { return (VegetableComponent)GetComponent(GameComponentsLookup.Vegetable); } }
    public bool hasVegetable { get { return HasComponent(GameComponentsLookup.Vegetable); } }

    public void AddVegetable(VegetableData newVegetableData) {
        var index = GameComponentsLookup.Vegetable;
        var component = CreateComponent<VegetableComponent>(index);
        component.VegetableData = newVegetableData;
        AddComponent(index, component);
    }

    public void ReplaceVegetable(VegetableData newVegetableData) {
        var index = GameComponentsLookup.Vegetable;
        var component = CreateComponent<VegetableComponent>(index);
        component.VegetableData = newVegetableData;
        ReplaceComponent(index, component);
    }

    public void RemoveVegetable() {
        RemoveComponent(GameComponentsLookup.Vegetable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherVegetable;

    public static Entitas.IMatcher<GameEntity> Vegetable {
        get {
            if (_matcherVegetable == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Vegetable);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherVegetable = matcher;
            }

            return _matcherVegetable;
        }
    }
}
