//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ProductorComponent productor { get { return (ProductorComponent)GetComponent(GameComponentsLookup.Productor); } }
    public bool hasProductor { get { return HasComponent(GameComponentsLookup.Productor); } }

    public void AddProductor(long newFrequency) {
        var index = GameComponentsLookup.Productor;
        var component = CreateComponent<ProductorComponent>(index);
        component.Frequency = newFrequency;
        AddComponent(index, component);
    }

    public void ReplaceProductor(long newFrequency) {
        var index = GameComponentsLookup.Productor;
        var component = CreateComponent<ProductorComponent>(index);
        component.Frequency = newFrequency;
        ReplaceComponent(index, component);
    }

    public void RemoveProductor() {
        RemoveComponent(GameComponentsLookup.Productor);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProductor;

    public static Entitas.IMatcher<GameEntity> Productor {
        get {
            if (_matcherProductor == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Productor);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProductor = matcher;
            }

            return _matcherProductor;
        }
    }
}
