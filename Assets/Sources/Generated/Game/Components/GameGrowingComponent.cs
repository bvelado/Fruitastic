//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public GrowingComponent growing { get { return (GrowingComponent)GetComponent(GameComponentsLookup.Growing); } }
    public bool hasGrowing { get { return HasComponent(GameComponentsLookup.Growing); } }

    public void AddGrowing(long newElapsed) {
        var index = GameComponentsLookup.Growing;
        var component = CreateComponent<GrowingComponent>(index);
        component.Elapsed = newElapsed;
        AddComponent(index, component);
    }

    public void ReplaceGrowing(long newElapsed) {
        var index = GameComponentsLookup.Growing;
        var component = CreateComponent<GrowingComponent>(index);
        component.Elapsed = newElapsed;
        ReplaceComponent(index, component);
    }

    public void RemoveGrowing() {
        RemoveComponent(GameComponentsLookup.Growing);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherGrowing;

    public static Entitas.IMatcher<GameEntity> Growing {
        get {
            if (_matcherGrowing == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Growing);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherGrowing = matcher;
            }

            return _matcherGrowing;
        }
    }
}
