//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class GameEntity {

    public ProducingComponent producing { get { return (ProducingComponent)GetComponent(GameComponentsLookup.Producing); } }
    public bool hasProducing { get { return HasComponent(GameComponentsLookup.Producing); } }

    public void AddProducing(long newElapsed) {
        var index = GameComponentsLookup.Producing;
        var component = CreateComponent<ProducingComponent>(index);
        component.Elapsed = newElapsed;
        AddComponent(index, component);
    }

    public void ReplaceProducing(long newElapsed) {
        var index = GameComponentsLookup.Producing;
        var component = CreateComponent<ProducingComponent>(index);
        component.Elapsed = newElapsed;
        ReplaceComponent(index, component);
    }

    public void RemoveProducing() {
        RemoveComponent(GameComponentsLookup.Producing);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class GameMatcher {

    static Entitas.IMatcher<GameEntity> _matcherProducing;

    public static Entitas.IMatcher<GameEntity> Producing {
        get {
            if (_matcherProducing == null) {
                var matcher = (Entitas.Matcher<GameEntity>)Entitas.Matcher<GameEntity>.AllOf(GameComponentsLookup.Producing);
                matcher.componentNames = GameComponentsLookup.componentNames;
                _matcherProducing = matcher;
            }

            return _matcherProducing;
        }
    }
}
