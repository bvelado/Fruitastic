//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentEntityGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public partial class InputEntity {

    public SellVegetableComponent sellVegetable { get { return (SellVegetableComponent)GetComponent(InputComponentsLookup.SellVegetable); } }
    public bool hasSellVegetable { get { return HasComponent(InputComponentsLookup.SellVegetable); } }

    public void AddSellVegetable(GameEntity newEntity) {
        var index = InputComponentsLookup.SellVegetable;
        var component = CreateComponent<SellVegetableComponent>(index);
        component.Entity = newEntity;
        AddComponent(index, component);
    }

    public void ReplaceSellVegetable(GameEntity newEntity) {
        var index = InputComponentsLookup.SellVegetable;
        var component = CreateComponent<SellVegetableComponent>(index);
        component.Entity = newEntity;
        ReplaceComponent(index, component);
    }

    public void RemoveSellVegetable() {
        RemoveComponent(InputComponentsLookup.SellVegetable);
    }
}

//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by Entitas.CodeGeneration.Plugins.ComponentMatcherGenerator.
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------
public sealed partial class InputMatcher {

    static Entitas.IMatcher<InputEntity> _matcherSellVegetable;

    public static Entitas.IMatcher<InputEntity> SellVegetable {
        get {
            if (_matcherSellVegetable == null) {
                var matcher = (Entitas.Matcher<InputEntity>)Entitas.Matcher<InputEntity>.AllOf(InputComponentsLookup.SellVegetable);
                matcher.componentNames = InputComponentsLookup.componentNames;
                _matcherSellVegetable = matcher;
            }

            return _matcherSellVegetable;
        }
    }
}
